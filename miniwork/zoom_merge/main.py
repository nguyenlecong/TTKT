# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '7-9.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

'''
    -thay qgraphic view bang photoviewer
    -khi chon anh ban dau cho hien o photoviewer
    -ham xu ly anh o main windows
    -sau khi xu ly xong thi set lai anh o photoviewer
'''

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QWidget, QLabel, QVBoxLayout
from PyQt5.QtGui import QColor, QImage, QPainter, QPixmap
from photo_viewer import PhotoViewer
import numpy as np
import cv2
import os

class Ui_MainWindow(QtWidgets.QGraphicsView):
    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(961, 613)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(60, 50, 860, 400))
        self.graphicsView.setObjectName("graphicsView")

        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(60, 460, 330, 91))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")

        self.pushButton_1 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_1.setGeometry(QtCore.QRect(30, 30, 121, 31))
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_1.clicked.connect(self.open_image_file)

        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_2.setGeometry(QtCore.QRect(190, 30, 111, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.gray_scale)

        self.photo = QtWidgets.QLabel(self.centralwidget)
        self.photo.setGeometry(QtCore.QRect(70, 70, 841, 361))
        self.photo.setText("")
        self.photo.setObjectName("photo")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 961, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self._scene = QtWidgets.QGraphicsScene(self)
        self._photo = QtWidgets.QGraphicsPixmapItem()
        self._scene.addItem(self._photo)
        self.setScene(self._scene)
        self.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.setResizeAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.setFrameShape(QtWidgets.QFrame.NoFrame)

        self.photoviewer_ = PhotoViewer(self)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Zoom"))
        self.pushButton_1.setText(_translate("MainWindow", "Select Image"))
        self.pushButton_2.setText(_translate("MainWindow", "Gray Scale"))

    def open_image_file(self):
        fname = QtWidgets.QFileDialog.getOpenFileName(self, 'Open file', 'imgs/', "Image files (*.jpg *.png)")
        self.input_path = fname[0]
        self.image = cv2.imread(self.input_path)
        
        pixmap = QPixmap(self.input_path)
        self.photo.setPixmap(QPixmap(pixmap))

    def gray_scale(self, input_path = None):
        if input_path is None:
            return 0           
        else:
            cvt = cv2.cvtColor(self.image, cv2.COLOR_BGR2GRAY)
            cvt = cv2.cvtColor(cvt, cv2.COLOR_GRAY2BGR)
            
            height, width, channel = cvt.shape
            bytesPerLine = width * channel
            image = QImage(cvt.data, width, height, bytesPerLine, QImage.Format_RGB888)
            
            self.photo.setPixmap(QPixmap.fromImage(image))
            
            cv2.waitKey(0)
            cv2.destroyAllWindows()

# ===========================================================================================

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
