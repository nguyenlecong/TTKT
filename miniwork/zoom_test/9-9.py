# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '7-9.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QWidget, QLabel, QVBoxLayout
from PyQt5.QtGui import QColor, QIcon, QImage, QPainter, QPixmap
from PyQt5.QtCore import *
import cv2
import numpy as np

class Ui_MainWindow(QtWidgets.QGraphicsView):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(961, 613)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.setWindowIcon(QIcon('imgs/2.jpg'))

        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(60, 50, 860, 400))
        self.graphicsView.setObjectName("graphicsView")

        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(60, 460, 650, 91))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")

        self.pushButton_1 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_1.setGeometry(QtCore.QRect(30, 30, 121, 31))
        self.pushButton_1.setObjectName("pushButton_1")
        self.pushButton_1.clicked.connect(self.selectimg)

        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_2.setGeometry(QtCore.QRect(190, 30, 111, 31))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.grayscale)

        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_3.setGeometry(QtCore.QRect(340, 30, 111, 31))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.ogimg) 

        self.pushButton_4 = QtWidgets.QPushButton(self.groupBox)
        self.pushButton_4.setGeometry(QtCore.QRect(490, 30, 111, 31))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(self.zoom) 

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(450, 20, 141, 20))
        self.label.setBaseSize(QtCore.QSize(0, 0))
        self.label.setObjectName("label")

        self.photo = QtWidgets.QLabel(self.centralwidget)
        self.photo.setGeometry(QtCore.QRect(70, 70, 841, 361))
        self.photo.setText("")
        self.photo.setObjectName("photo")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 961, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        
        self.pushButton_1.setText(_translate("MainWindow", "Select Image"))
        self.pushButton_2.setText(_translate("MainWindow", "Gray Scale"))
        self.pushButton_3.setText(_translate("MainWindow", "Original Image"))
        self.pushButton_4.setText(_translate("MainWindow","Zoom"))
        self.label.setText(_translate("MainWindow", "Beginner App"))

    imgpath = None
    
    # Select an image from file browser
    def selectimg(self):
        filename = QFileDialog.getOpenFileName()
        self.imgpath = filename[0]
        pixmap = QPixmap(self.imgpath)
        self.photo.setPixmap(QPixmap(pixmap))
        # self.resize(pixmap.width(), pixmap.height())
    
    def grayscale(self):
        # If not select any image, notice select an image
        if (self.imgpath == None):
            self.notice()  
        # Else, grayscale the image    
        else:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("Successfull Gray Scale!")
            msg.setWindowTitle("Processing...")
            msg.exec_()

            image = cv2.imread(self.imgpath)
            
            cvt = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
            cvt = cv2.cvtColor(cvt, cv2.COLOR_GRAY2BGR)
            
            height, width, channel = cvt.shape
            bytesPerLine = width * channel
            image = QImage(cvt.data, width, height, bytesPerLine, QImage.Format_RGB888)
            
            self.photo.setPixmap(QPixmap.fromImage(image))
            
            cv2.waitKey(0)
            cv2.destroyAllWindows()

    def ogimg(self):
        if (self.imgpath == None):
            self.notice()
        else:
            self.photo.setPixmap(QPixmap(self.imgpath))

    def zoom(self):
        # If not select any image, notice select an image
        if (self.imgpath == None):

            self.notice() 
        # Else can zoom an image
        else:
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("You Will Can Zoom Later :v")
            msg.setWindowTitle("Processing...")
            msg.exec_()
            
    def notice(self):
        if (self.imgpath == None):
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setText("Select Image First!")
            msg.setWindowTitle("Processing...")
            msg.exec_()

if __name__ == "__main__":
    
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
